#!/usr/bin/env ruby
require 'gli'
require 'rainbow'
require 'grid_runner'

include GLI::App

program_desc 'A simple CLI to manage The Grid sub processes'

subcommand_option_handling :normal
arguments :strict


def apps_from_args(args)
  return App.all if args.first == "all"
  return App.find(args) if args.first
end

desc 'Describe run'
arg_name 'Describe arguments to run here'
command :run do |c|
  c.desc 'Describe a flag to run'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|
    apps_from_args(args).each do |app|
      if app.status == :running
        puts Rainbow("#{app.name} already running!").red
        puts 
      else
        app.run
      end
    end
  end
end

desc 'Describe restart'
arg_name "app names separated by a SPACE or 'all'" 
command :restart do |c|
  c.action do |global_options,options,args|
    colors = COLORS.shuffle
    apps_from_args(args).each do |app|
      begin
        if app.status == :running
          Process.kill("HUP", app.pid.to_i)
          puts "kilt #{app.name}"
        end
        app.display
      ensure
        app.run
      end
    end

    puts "restart command ran"
  end
end

desc 'Describe list here'
arg_name 'Describe arguments to list here'
command :list do |c|
  c.action do |global_options,options,args|
    App.all.each_with_index do |app, ix|
      app.display(ix)
    end
  end
end

desc 'kills selected app'
arg_name 'provide an app name'
command :kill do |c|
  c.action do |global_options,options,args|
    apps_from_args(args).each do |app|
      puts "No app with that name found" and return unless app
      app.display
      app.kill!
    end
    puts
  end
end

exit run(ARGV)
